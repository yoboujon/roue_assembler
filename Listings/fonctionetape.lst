


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********************
    2 00000000                 THUMB
    3 00000000                 REQUIRE8
    4 00000000                 PRESERVE8
    5 00000000         
    6 00000000         ;*******************************************************
                       *******************
    7 00000000         ;  Fichier Vierge.asm
    8 00000000         ; Auteur : V.MAHOUT
    9 00000000         ; Date :  12/11/2013
   10 00000000         ;*******************************************************
                       *******************
   11 00000000         
   12 00000000         ;***************IMPORT/EXPORT***************************
                       *******************
   13 00000000         
   14 00000000                 EXPORT           Eteint_LED
   15 00000000                 EXPORT           Allume_LED
   16 00000000                 EXPORT           Inverse_LED
   17 00000000         
   18 00000000         ;*******************************************************
                       *******************
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;***************CONSTANTES******************************
                       *******************
   23 00000000         
   24 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA
                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00



ARM Macro Assembler    Page 2 


   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 
                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 
                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         
   52 00000000         



ARM Macro Assembler    Page 3 


   53 00000000                 END
   25 00000000         
   26 00000000         ;*******************************************************
                       *******************
   27 00000000         
   28 00000000         
   29 00000000         ;***************VARIABLES*******************************
                       *******************
   30 00000000                 AREA             MesDonnees, data, readwrite
   31 00000000         ;*******************************************************
                       *******************
   32 00000000         
   33 00000000         
   34 00000000         
   35 00000000         ;*******************************************************
                       *******************
   36 00000000         
   37 00000000         
   38 00000000         
   39 00000000         ;***************CODE************************************
                       *******************
   40 00000000                 AREA             moncode, code, readonly
   41 00000000         ;*******************************************************
                       *******************
   42 00000000         
   43 00000000         
   44 00000000         
   45 00000000         
   46 00000000         
   47 00000000         ;#######################################################
                       #################
   48 00000000         ; Procédure ????
   49 00000000         ;#######################################################
                       #################
   50 00000000         ;
   51 00000000         ; Paramètre entrant  : ???
   52 00000000         ; Paramètre sortant  : ???
   53 00000000         ; Variables globales : ???
   54 00000000         ; Registres modifiés : ???
   55 00000000         ;-------------------------------------------------------
                       -----------------
   56 00000000         
   57 00000000         
   58 00000000         ;*******************************************************
                       ************************
   59 00000000         ; On eteint la LED
   60 00000000         ;*******************************************************
                       ************************
   61 00000000         Eteint_LED
                               PROC
   62 00000000         
   63 00000000 E92D 1001       PUSH             {R12,R0}    ;On stocke R12 dans
                                                             R0
   64 00000004 F8DF C050       LDR              R12,=GPIOBASEB ;On recupère l'a
                                                            dresse de base
   65 00000008 F44F 6580       MOV              R5,#(0x01 << 10) ;1 décalé de 1
                                                            0 dans R5
   66 0000000C F8AC 5014       STRH             R5,[R12,#OffsetReset] ;On stock
                                                            e la variable R5 à 



ARM Macro Assembler    Page 4 


                                                            l'adresse 0x0X40010
                                                            C14 (reset)
   67 00000010 E8BD 1001       POP              {R12,R0}    ;On restitue R12 da
                                                            ns R0
   68 00000014 4770            BX               LR          ;Retour
   69 00000016         ;LDR R5,[R12,#0x0C]  ;Valeur à l'adresse de l'output
   70 00000016         ;AND R5, R5,#~(0x01 << 10) ;OU LOGIQUE pour calculer la 
                       valeur a mettre dans l'output
   71 00000016         ;STRH R5,[R12,#0x0C]   ;Etat du port B (R5) stocké dans 
                       l'output  
   72 00000016                 ENDP
   73 00000016         
   74 00000016         ;*******************************************************
                       ************************
   75 00000016         ; On allume la LED
   76 00000016         ;*******************************************************
                       ************************
   77 00000016         Allume_LED
                               PROC
   78 00000016         
   79 00000016 E92D 1001       PUSH             {R12,R0}    ;On stocke R12 dans
                                                             R0
   80 0000001A F8DF C03C       LDR              R12,=GPIOBASEB ;On recupère l'a
                                                            dresse de base
   81 0000001E F44F 6580       MOV              R5,#(0x01 << 10) ;1 décalé de 1
                                                            0 dans R5
   82 00000022 F8AC 5010       STRH             R5,[R12,#OffsetSet] ;On stocke 
                                                            la variable R5 à l'
                                                            adresse 0x0X40010C1
                                                            0 (set)
   83 00000026 E8BD 1001       POP              {R12,R0}    ;On restitue R12 da
                                                            ns R0
   84 0000002A 4770            BX               LR          ;Retour
   85 0000002C         ;LDR R5,[R12,#0x0C]  ;Valeur à l'adresse de l'output
   86 0000002C         ;ORR R5, R5,#(0x01 << 10) ;OU LOGIQUE pour calculer la v
                       aleur a mettre dans l'output
   87 0000002C         ;STRH R5,[R12,#0x0C]   ;Etat du port B (R5) stocké dans 
                       l'output 
   88 0000002C         
   89 0000002C                 ENDP
   90 0000002C         
   91 0000002C         ;*******************************************************
                       ************************
   92 0000002C         ; On inverse la LED (besoin de R3)
   93 0000002C         ;*******************************************************
                       ************************
   94 0000002C         Inverse_LED
                               PROC
   95 0000002C E92D 1001       PUSH             {R12,R0}    ;On stocke R12 dans
                                                             R0
   96 00000030 F8DF C024       LDR              R12,=GPIOBASEB ;On recupère l'a
                                                            dresse de base
   97 00000034 F44F 6580       MOV              R5,#(0x01 << 10) ;1 décalé de 1
                                                            0 dans R5
   98 00000038 2B00            CMP              R3,#0       ;Si R3=0 (default) 
                                                            alors on allume, si
                                                            non on eteint
   99 0000003A         ;BEQ Allume
  100 0000003A         ;B Eteint



ARM Macro Assembler    Page 5 


  101 0000003A D104            BNE              Eteint
  102 0000003C         Allume
  103 0000003C F8AC 5010       STRH             R5,[R12,#OffsetSet] ;On stocke 
                                                            la variable R5 à l'
                                                            adresse 0x0X40010C1
                                                            0 (set)
  104 00000040 F04F 0301       MOV              R3,#1       ;     ;On remet la 
                                                            variable à 1
  105 00000044 E004            B                Fin         ;Retour 
  106 00000046         Eteint
  107 00000046 F8AC 5014       STRH             R5,[R12,#OffsetReset] ;On stock
                                                            e la variable R5 à 
                                                            l'adresse 0x0X40010
                                                            C14 (reset)
  108 0000004A F04F 0300       MOV              R3,#0       ;     ;On remet la 
                                                            variable à 0
  109 0000004E E7FF            B                Fin
  110 00000050         
  111 00000050         
  112 00000050         Fin
  113 00000050 E8BD 1001       POP              {R12,R0}    ;On restitue R12 da
                                                            ns R0
  114 00000054 4770            BX               LR          ;Retour
  115 00000056         
  116 00000056                 ENDP
  117 00000056         
  118 00000056         ;*******************************************************
                       *******************
  119 00000056                 END
              00 00 40010C00 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\fonctionetape.d -o.\objects\fonctionetape.o -I.\RTE\Devi
ce\STM32F103RB -I.\RTE\_Simul_ -IC:\Programdata\Keil\Arm\Packs\ARM\CMSIS\5.7.0\
CMSIS\Core\Include -IC:\Programdata\Keil\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Dev
ice\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --prede
fine="__UVISION_VERSION SETA 534" --predefine="_RTE_ SETA 1" --predefine="STM32
F10X_MD SETA 1" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --
list=.\listings\fonctionetape.lst FonctionEtape.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MesDonnees 00000000

Symbol: MesDonnees
   Definitions
      At line 30 in file FonctionEtape.asm
   Uses
      None
Comment: MesDonnees unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Allume 0000003C

Symbol: Allume
   Definitions
      At line 102 in file FonctionEtape.asm
   Uses
      None
Comment: Allume unused
Allume_LED 00000016

Symbol: Allume_LED
   Definitions
      At line 77 in file FonctionEtape.asm
   Uses
      At line 15 in file FonctionEtape.asm
Comment: Allume_LED used once
Eteint 00000046

Symbol: Eteint
   Definitions
      At line 106 in file FonctionEtape.asm
   Uses
      At line 101 in file FonctionEtape.asm
Comment: Eteint used once
Eteint_LED 00000000

Symbol: Eteint_LED
   Definitions
      At line 61 in file FonctionEtape.asm
   Uses
      At line 14 in file FonctionEtape.asm
Comment: Eteint_LED used once
Fin 00000050

Symbol: Fin
   Definitions
      At line 112 in file FonctionEtape.asm
   Uses
      At line 105 in file FonctionEtape.asm
      At line 109 in file FonctionEtape.asm

Inverse_LED 0000002C

Symbol: Inverse_LED
   Definitions
      At line 94 in file FonctionEtape.asm
   Uses
      At line 16 in file FonctionEtape.asm
Comment: Inverse_LED used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 40 in file FonctionEtape.asm
   Uses
      None
Comment: moncode unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEA unused
GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      At line 64 in file FonctionEtape.asm
      At line 80 in file FonctionEtape.asm
      At line 96 in file FonctionEtape.asm

MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused
MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots
   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused
MaskSerial_In1 00000080



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: MaskSerial_In1
   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetInput unused
OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetOutput unused
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      At line 66 in file FonctionEtape.asm
      At line 107 in file FonctionEtape.asm

OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses
      At line 82 in file FonctionEtape.asm
      At line 103 in file FonctionEtape.asm

SCB_VTOR E000ED08




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses
      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
19 symbols
364 symbols in table
